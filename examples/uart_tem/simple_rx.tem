# top
// Simple 8n1 UART receiver in Tempus

# params
clocks_per_bit >: int = 4;
bits_per_byte  >: int = 10;
delay_mid      >: int = clocks_per_bit / 2;
delay_max      >: int = clocks_per_bit - 1;
count_max      >: int = bits_per_byte - 1;

# ports
.src       :> u1;
.dst.data  :< shift_reg = shift;
.dst.valid :< u1 = 0;
.dst.ready :> u1;

# state
delay : counter(delay_max) = delay_max;
count : counter(count_max) = count_max;
shift : u8 = 0;

# update
match (true) {
  case (delay < delay_max) {
    @delay = delay + 1;
  }
  case (count < count_max) {
    @delay = 0;
    @count = count + 1;
  }
  case (src == 0) {
    @delay = 0;
    @count = 0;
  }
}

if (delay == delay_mid) {
  @shift = src :: (shift >> 1);
  // I think this is wrong...
  dst.valid = @count == 8;
}
