// Simple 8n1 UART transmitter in Tempus

# params
clocks_per_bit := 4;
bits_per_byte  := 10;
delay_mid      := clocks_per_bit / 2;
delay_max      := clocks_per_bit - 1;
count_max      := bits_per_byte - 1;

# types
reg_delay := unsigned(delay_max);
reg_count := unsigned(count_max);
reg_shift := u10;

# ports
.src.data  :> u8;
.src.valid :> u1;
.src.ready :< u1 = 0;

.dst.data  :< u1 = shift[0];

# regs
delay : reg_delay = delay_max;
count : reg_count = count_max;
shift : reg_shift = dontcare;

# update
match (true) {
  case (delay < delay_max) {
    @delay = delay + 1;
  }
  case (count < count_max) {
    @delay = 0;
    @count = count + 1;
    @shift = 1u1 :: (shift >> 1);
  }
  default {
    .src.ready = 1;
    if (.src.valid) {
      @delay = 0;
      @count = 0;
      @shift = 1u1 :: .src.data :: 0u1;
    }
  }
}
